

 LIST OF ROUTINES

   Applies to MAGIC3_44 (and higher)

   The code is writtine in fortran 77.
   Subroutineds start with s_, libraries with l_,
   functions with f_, and common blocks with c_.

 0) Makefile
   magic.make

 1) THE MAIN
   magic.f

 2) Common blocks storing various constant parameter/functions (more below)
   c_Grenoble.f     : not used in the moment
   c_blocking.f
   c_const.f
   c_init_fields.f
   c_logic.f
   c_movie.f
   c_num_param.f
   c_output.f
   c_parallel.f
   c_phys_param.f

 3) Libraries containing several routines:
   l_char_manip.f       : character/string manipulation
   l_timing.f           : timing using wall clock time
   l_usefull.f          : sic

 4) Reading input/ preparation/ aftermath
   truncation.f         : defines truncation/grid
   s_checkTruncation.f  : checks this
   s_check_time_hits.f  : checks for times when special output should be created
   s_checkMovie.f       : checks which movie output is desired
   s_openFiles.f        : opens output files
   s_closeFiles.f       : closes these
   s_defaultNamelists.f : sets default namelists 
   s_readNamelists.f    : read namelists from input file
   s_writeNamelists.f   : writes namelists into log.TAG file
   s_writeInfo.f        : writes some info into STDOUT and log.TAG
   s_parallel.f         : defines processors
   s_getBlocking.f      : defines blocking and distribution over processors ++
   s_radial.f           : calculates radial functions
   c_radial.f           : stores these
   s_horizontal.f       : calculated horizontal functions 
   c_horizontal.f       : stores these
   s_preCalc.f          : some more pre calculation
   s_preCalcTimes.f     : time dependent pre calculation
   s_get_hit_times.f    : checks for hit times


 5) Getting the starting solution
   c_fields.f           : stores scalar potential updated in s_LMLoop.f
   c_dt_fieldsLast.f    : stores time step contribution from previous steps
   s_getStartFields.f   : get start fields
   s_readStartFields.f  : read start fields from previous run
   s_mapData.f          : read and map these fields
   s_mapDataIC.f        : same for IC
   s_mapDataICR.f       : map on new radial grid
   s_mapDataR.f         :   "
   s_initB.f            : initialized fields:
   s_initS.f
   s_initV.f
   s_getB0.f            : for Grenoble imposed dipole field
   s_s_cond.f           : Calculate diffusive solution
   s_j_cond.f           :    "
   f_random.f           : for random fields

 6) Main routine performing the work:
   s_step_time.f        : main working routine
   s_stop_iteration.f   : used to stop this
   s_courant.f          : for checking Courant-Friedlich-Levy condition
   s_dt_courant.f             "

 7) LM-loop performing the time step in the update* routines
   s_LMLoop.f           : main loop for updating
   s_updateB.f          : updating the scalar potentials 
   s_updateS.f
   s_updateWP.f
   s_updateZ.f
   c_mat.f              : stores time stepping matricies
   s_get_s0Mat.f        : get various time stepping routines
   s_get_sMat.f
   s_get_wpMat.f
   s_get_bMat.f
   s_get_zMat.f
   s_get_z10Mat.f
   s_sgefa.f            : performs LU decomposition of time stepping matricies
   s_sgesl.f            : back substitution using LU decomposition
   s_cgesl.f            :   "
   s_cgeslML.f          :   "

 8) radial-loop for calculating the nonlinear terms and the explicit time step
   s_radialLoopG.f      : Main nl loop
   s_get_nl.f           : get non-linear terms
   s_get_nl_ic.f        : same for IC field, now called in s_updateB.f
   s_get_td.f           : get explicit time step
   s_getHelLM.f         : calculate axisymmetric helicity
   s_v_rigid_boundary.f : set rigid boundaries 
   s_get_b_nl_bcs.f     : for non-linear magnetic boundary conditions 
   s_get_br_v_bcs.f


 9) Legendre transform
   s_gauleg.f           : initialized Gauss-Legendre tranform
   s_plm_theta.f        : calculated Legendre polynomial
   s_legPrep.f          : legPrep routines prepare the (l,m)->(theta,m) transform
   s_legPrepG.f
   s_legPrep_IC.f
   s_legPrep_MA.f
   s_legTF.f            : performs (l,m)->(theta,m) transform
   s_legTFG.f           : performs (l,m)->(theta,m) transform for generalized Ylms
   s_legTFGnomag.f      : same as s_legTFG.f but without magnetic field
   s_legtfAS.f          : (theta,m)->(l,m) transform for axisymmetric fields
   s_legtfAS2.f         : same as s_legtfAS.f but for two arrays
   s_legTF1.f           : (theta,m)->(l,m) transform
   s_legTF2.f           : (theta,m)->(l,m) transform for two arrays
   s_legTF3.f           : (theta,m)->(l,m) transform for three arrays

 10) Chebychev and fast cosine-transform in radius
   s_cheb_x_map_e.f     : Get radial point for Chebs
   s_factorise.f        : SIC
   s_get_chebs.f        : Get Chebs
   s_get_chebs_even.f
   s_costf1.f           : Cos-transform 1
   s_costf2.f           : Cos-transform 2
   s_init_costf1.f      : initializa these
   s_init_costf2.f
   s_fft_fac.f          : fft used by cos-transform
   s_init_rNB.f         : prepares usage of a cut-back grid, to be used with _R routines
   s_get_dcheb.f        : derivatives in cheb space
   s_get_dcheb_even.f
   s_get_ddcheb.f
   s_get_ddcheb_even.f
   s_get_dddcheb.f
   s_get_dddr.f         : derivatives in radial space
   s_get_ddr.f
   s_get_ddr_even.f
   s_get_ddrNS_even.f
   s_get_dr.f
   s_get_drNS.f
   s_get_dr_R.f
   s_get_drNS_R.f
   s_get_dr_even.f
   s_get_drNS_even.f
   s_chebInt.f          : Integration in Cheb space
   f_rInt.f             : Integration in radial space
   f_rIntIC.f           :     "
   f_rInt_R.f           : Same but with radial dependent weigth

 11) fft in phi
   s_init_fft.f         : initialization
   s_fftJW.f            : basic fft routines
   s_fft_theta.f        : fft for one colatitude
   s_fft_thetab.f       : fft for one colatitude block
   s_fft_thetas.f       : fft for all colatutudes

 12) For calculating output of magnetic field generation terms
   c_dtB.f
   s_get_dtBLM.f
   s_get_dH_dtBLM.f
   s_get_dtB.f
   s_get_dtBLMIC.f
   s_get_dtBLMfinish.f

 13) For calculating Rms forces
   c_RMS.f
   s_zeroRms.f
   s_dtBrms.f
   s_dtVrms.f
   s_get_PolTorRms.f
   s_hInt2Pol.f
   s_hInt2Tor.f
   s_hInt2dPol.f

 14) For TO output
   c_TO.f
   s_getTO.f
   s_getTOfinish.f
   s_getTOnext.f
   s_outTO.f

 15) Energies and spectra
   s_get_e_kin.f        : kinetic energy
   s_get_e_mag.f        : magnetic energy
   s_spectrum.f         : energy spectra
   s_spectrum_average.f : time averaging of spectra
   f_cc.f               : complex scalar field -> real amplitude

 16) Graphic/movie output, field components 
   s_graphOut.f     : Output into graphic file G*TAG
   s_graphOut_IC.f
   s_graph_write.f
   s_print_graph.f
   s_get_movie_type.f        : For movie output
   s_store_movie_frame.f
   s_store_movie_frame_IC.f
   s_write_dtB_frame.f
   s_write_movie_frame.f
   s_get_B_surface.f         : B at planetart surface
   s_get_Bpol.f              : Bpol components
   s_get_Btor.f              : Btor components
   s_get_PAS.f               : Poloidal axisymmetric components
   s_fl.f                    : fieldlines
   s_sl.f                    : streamlines
   s_lm2pt.f      : horizontal components of a toroidal scalar field
   s_lmAS2pt.f    : horizontal components of an axisymmetric toroidal scalar field
   l_lnPAS2tr.f   : phi component of an axisymmetric toroidal field
   s_getPAStr.f   : phi component of an axisymmetric toroidal field
   s_getAStr.f    : function value for an axisymmetric field given in (Cheb,m) space
   s_getDVptr.f   : all three components and z-vortizity for a field given in (Cheb,l,m) space

 17) Other output:
   s_output.f              : controls most of the output
   s_getDlm.f              : calculate length scales
   s_getEgeos.f            : calculates geostrophy
   s_get_lorentz_torque.f  : SIC
   s_get_viscous_torque.f  : SIC
   s_get_power.f           : SIC, into power.TAG
   s_outMisc.f             : various output  into misc.TAG 
   s_outOmega.f            : rotation rate for imposed differential rotation into omega.TAG
   s_rBpSpec.f             : toroidal spectrum for l=1:6 for different radii
   s_rBrSpec.f             : poloidal spectrum for l=1:6 for different radii
   s_write_rot.f           : info about inner core and mantle rotation into rot.TAG
   s_fields_average.f      : averaging the fields, creating graphic and spectrum output at end
   s_logWrite.f            : writing into log.TAG
   s_safeOut.f             : save output open/close


 18) Storing scalar potentials into files for later analysis:
   s_store.f               : rst-file
   s_storePot.f            : potential in (l,m,cheb) space, single precision
   s_storePotW.f           : potential in (l,m,cheb) space, single precision
   s_write_Bcmb.f          : Store potential at CMB
   s_write_coeff_r.f       : Store potentials at selected radii


	JW, 19 Feb 2010
